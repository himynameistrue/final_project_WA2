version: '3'

services:
  mysql:
    container_name: mysql
    image: mysql:latest
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=debezium
    cap_add:
      - SYS_NICE
    volumes:
      - ./docker/provision/mysql/init:/docker-entrypoint-initdb.d
      - /data/mysql

  zookeeper:
    container_name: zookeeper
    image: zookeeper
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka
    hostname: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://kafka:29092
      LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  debezium-connect:
    container_name: debezium
    image: debezium-image
    build: ./outboxTransformer
    hostname: debezium-connect
    ports:
      - '8083:8083'
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium_connect_config
      OFFSET_STORAGE_TOPIC: debezium_connect_offsets
      STATUS_STORAGE_TOPIC: debezium_connect_status
      BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      - kafka
      - mysql

  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop
    ports:
      - "9100:9000"
    environment:
      - KAFKA_BROKERCONNECT=kafka:29092
      - JVM_OPTS=-Xms32M -Xmx64M
    depends_on:
      - kafka

  order:
    container_name: order_service
    image: order-image
    build: ./orderService
    depends_on:
      - kafka
      - mysql
    ports:
      - "8081:8081"

  orchestrator:
    container_name: orchestrator_service
    image: orchestrator-image
    build: ./orchestrator
    depends_on:
      - kafka
      - mysql

  wallet:
    container_name: wallet_service
    image: wallet-image
    build: ./walletService
    depends_on:
      - kafka
      - mysql

  warehouse:
    container_name: warehouse_service
    image: warehouse-image
    build: ./warehouse-master
    depends_on:
      - kafka
      - mysql